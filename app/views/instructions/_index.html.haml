%br
.text-right
  = link_to t('new.instruction'), new_product_instruction_path(product), class: 'btn btn-success btn-sm' if policy(Instruction.new(product: product)).new?
%br

%table.table.table-hover
  %tr
    %th Language
    -if user_signed_in?
      %th Published
      %th
      %th
    %th
    %th

  - if user_signed_in?
    - product.instructions.each do |instruction|
      %tr
        %td= instruction.language.name
        %td
          - if instruction.published?
            - if product.published?
              = render "support/published"
            - else
              = render "support/not_visible"
          - else
            = render "support/not_published"
        %td= link_to t('instructions.primary'), instruction_primary_path(instruction), class: 'btn btn-success btn-xs' if policy(instruction).primary?
        %td= link_to t('instructions.history'), instruction_path(instruction), class: 'btn btn-primary btn-xs' if policy(instruction).show?
        %td= link_to t('keywords.edit'), edit_instruction_path(instruction), class: 'btn btn-warning btn-xs' if policy(instruction).edit?
        %td= render "instructions/delete", instruction: instruction
        /%td= link_to t('keywords.delete'), instruction, :method => :delete, :data => { confirm: t('instructions.destroy.warning') }, class: 'btn btn-danger btn-xs' if policy(instruction).destroy?
  - else
    - product.instructions.published.each do |instruction|
      %tr
        %td= instruction.language.name
        %td= link_to t('instructions.primary'), instruction_primary_path(instruction), class: 'btn btn-success btn-xs' if policy(instruction).show?
        %td= link_to t('instructions.history'), instruction_path(instruction), class: 'btn btn-primary btn-xs' if policy(instruction).show?

%br